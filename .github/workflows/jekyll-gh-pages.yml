# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v4
  export:
    # Run the export step in the stirlingtools/stirling-pdf container image
    needs: build
    runs-on: ubuntu-latest
    container:
      image: stirlingtools/stirling-pdf:latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v5
      - name : Extract artifact
        run: |
          set -e
          mkdir -p /__w/hacktheplanet/hacktheplanet
          tar -xvf pages-artifact.tar -C /__w/hacktheplanet/hacktheplanet
          ls -R /__w/hacktheplanet/hacktheplanet  

      # - name: Generate PDFs from Markdown
      #   run: |
      #     set -e
      #     mkdir -p pdfs
      #     # Convert all tracked markdown files (exclude _site) to PDFs
      #     ls /__w/hacktheplanet/hacktheplanet/
      #     tar -xv /__w/hacktheplanet/hacktheplanet/artifact.tar -C /__w/hacktheplanet/hacktheplanet
      #     ls -R '/__w/hacktheplanet/hacktheplanet/*.md' | grep -v '^_site/' | while read -r f; do
      #       out="pdfs/$(basename "${f%.*}").pdf"
      #       echo "Converting $f -> $out"
      #       if command -v stirling-pdf >/dev/null 2>&1; then
      #         stirling-pdf "$f" -o "$out"
      #       elif command -v stpdf >/dev/null 2>&1; then
      #         stpdf "$f" -o "$out"
      #       else
      #         # fallback: try pandoc if available
      #         pandoc "$f" -o "$out"
      #       fi
      #     done

      - name: Upload PDFs artifact
        uses: actions/upload-artifact@v4
        with:
          name: pdfs
          path: pdfs
  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
